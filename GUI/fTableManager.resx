<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="fileSystemWatcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>211, 17</value>
  </metadata>
  <metadata name="timerDropDown.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>401, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QBAEAQBAEAQBAEAQBAEAQBAEAQBAf//Z
</value>
  </data>
</root>