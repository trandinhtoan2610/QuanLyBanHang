<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnadd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>